rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{uid} {

       allow read, create: if request.auth != null && request.auth.uid == uid && request.resource.data.username != null && exists(/databases/$(database)/documents/users/$(request.resource.data.username)) == false;
    }

    match /usernames/{username} {

      allow read: if true;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == username && request.resource.data.uid == request.auth.uid;
    }

    match /users/{uid}/contacts/{contact} {
      // TODO: make may be sent requests list to help manage outgoing requests.
      // owner of contact list can change status of a friend to [friend], [blocked], [pending] and add/remove himself from other contact list with status [pending](create)[pending, friend](delete and create)
      allow read, update: if request.auth != null && request.auth.uid == uid;
      allow read: if request.auth != null && request.auth.uid != uid;

      // 
      allow create: if request.auth != null && request.auth.uid != uid && request.auth.uid == contact && request.resource.data.status == 'pending';
      allow delete: if request.auth != null && request.auth.uid != uid && request.auth.uid == contact && (request.resource.data.status == 'pending' || request.resource.data.status == 'friend');
    }
  }
}